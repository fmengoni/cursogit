GIt
Configurar usuario: git config --global user.name "Federico Mengoni"
Configurar email: git config --global user.email "federico.mengoni@gmail.com"
Configurar colores: git config --global color.ui true
Listar configuraciones actuales: git config --global --list	

1.- git init - iniciar el repositorio en un directorio en particular
2.- git status - incida el estado de los archivos que se encuentran dentro del directorio
3.- git add - Con este comando decidimos que archivos están listos para el siguiente paso
4.- git commit -m "Mensaje" - Guardamos los cambios con un mensaje para identificarlos
5.- git log - Nos da una lista de todos nuestros commits con su respectiva información
6.- git checkout - Con este comando viajamos a través de nuestros commits o nuestras ramas 
7.- git reset - Es similar a checkout a diferencia que este elimina los commits (para realizar el reset es necesario saber el id del commit con git log)
	git reset --soft - El git reset más simple y que no toca nuestro "Working Area" (No se mete con nuestro código)
	git reset --mixed - Este git reset borra el "Staging Area", sin tocar el "Working Area" (no se usa mucho)
	git reset --hard - Este git reset borra absolutamente todo lo que hay en el commit 
8.- git help - Este comando nos ayuda a saber como funciona git o alguno de sus comandos.


Conceptos:
Head: es en el commit donde nos encontramos
Ramas: Es una linea de tiempo en nuestro proyecto, que nos sirven para arreglar errores, experimentar, hacer grandes cambios, etc
	Master: La rama master es en donde comanzamos a trabajar, es la rama principal y estable de nuestro proyecto

Para crear una nueva rama ejecutamos lo siguiente:
git branch tedis

Para borrar una rama ejecutamos lo siguiente:
git branch -d tedis

Fusiones: Es la creación de un nuevo commit juntando una rama con otra
Pasos:
	1.- Pararnos sobre la rama destino (ej. git checkout master)
	2.- git merge tedis

Dos tipos de "Fusiones" (Merges)
Fast-Forward: Simple y automático. Solo va a hacer la fusión, esto pasa normalmente cuando se trabaja con archivos deferentes o lineas de código distintas
Manual Merge: Largo y manual. Antes de hacer la fusión tiene que pasar por nosotros, normalmente ocurre cuando se trabaja en los mismos archivos o líneas de códigos.

Prueba branch colores: azul

Para cambiar a una rama que no existe podemos usar el siguiente comando
git checkout -b text (Este comando crea el branch "text" y se para sobre ese nuevo branch)
